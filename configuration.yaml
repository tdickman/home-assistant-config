homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 30.280
  longitude: -97.773
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 186
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago
  customize:
    switch.tv_power:
      emulated_hue_name: 'tv'
    input_boolean.display_state:
      emulated_hue_name: 'display'
    light.living_room_2:
      hidden: true
    binary_sensor.motion_sensor_158d00012dae15:
      friendly_name: Bathroom Motion Sensor
    binary_sensor.motion_sensor_158d0001535b7c:
      friendly_name: Bedroom Motion Sensor
    binary_sensor.switch_158d00013f9a76:
      friendly_name: Button Bedroom
    binary_sensor.door_window_sensor_158d00010673c9:
      friendly_name: Front Door Sensor
    light.gateway_light_f0b429cbf3e0:
      friendly_name: Gateway Light
    sensor.humidity_158d00011003cd:
      friendly_name: Bathroom Humidity
    sensor.temperature_158d00011003cd:
      friendly_name: Bathroom Temperature
    sensor.humidity_158d000159f9f2:
      friendly_name: Deck Humidity
    sensor.temperature_158d000159f9f2:
      friendly_name: Deck Temperature
    sensor.dark_sky_nearest_storm_distance:
      friendly_name: Nearest Storm Distance
    sensor.dark_sky_precip_probability:
      friendly_name: Chance of Precipitation
    sensor.dark_sky_minutely_summary:
      friendly_name: Forecast
    sensor.dark_sky_hourly_summary:
      friendly_name: Forecast
    sensor.dark_sky_temperature:
      friendly_name: Temperature
    sensor.dark_sky_daily_low_temperature:
      friendly_name: Low
    sensor.dark_sky_daily_high_temperature:
      friendly_name: High
    sensor.dark_sky_humidity:
      friendly_name: Humidity
    sensor.desktop_month_profit:
      icon: mdi:currency-usd
    sensor.eth_mining_balance:
      icon: mdi:currency-eth
    sensor.sia_mining_balance:
      icon: mdi:harddisk
    sensor.eth_rate:
      icon: mdi:pound
    sensor.sia_rate:
      icon: mdi:pound
    sensor.desktop_watts:
      icon: mdi:power-plug
    sensor.desktop_24h_cost:
      icon: mdi:currency-usd
    sensor.desktop_month_cost:
      icon: mdi:currency-usd
    sensor.desktop_month_profit:
      icon: mdi:currency-usd
  customize_glob:
    "*_eth_rate":
      icon: mdi:pound
    "*_sia_rate":
      icon: mdi:pound
    "*_temperature":
      icon: mdi:thermometer
    "*_fan":
      icon: mdi:fan
    "sensor.desktop_month_revenue*":
      icon: mdi:currency-usd

recorder:
  purge_interval: 2
  purge_keep_days: 365

# usps:
#   username: !secret usps_username
#   password: !secret usps_password

light:
  platform: hue
  host: 192.168.1.12

media_player:
  - platform: cast
  - platform: cast

xiaomi:
  gateways:
    - sid: !secret xiaomi_sid
      key: !secret xiaomi_key

nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret

# Enables the frontend
frontend:

http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret http_password
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: home.epiccontructions.com:8123
  ssl_certificate: /etc/letsencrypt/live/home.epicconstructions.com-0001/fullchain.pem
  ssl_key: /etc/letsencrypt/live/home.epicconstructions.com-0001/privkey.pem

# Checks for available updates
updater:

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

switch:
  - name: Desktop Switch
    platform: tplink
    host: 192.168.1.14
  - platform: flux
    lights:
      - light.couch_2
      - light.hanging_light_1
      - light.hanging_light_2
      - light.hanging_light_3
      - light.bedroom_1
      - light.bedroom_2
      - light.bedroom_3
      - light.bedroom_4
      - light.bathroom_1
      - light.bathroom_2
      - light.bathroom_3
      - light.bathroom_4
    name: Fluxer
    start_time: '7:00'
    stop_time: '23:00'
    start_colortemp: 5000
    sunset_colortemp: 5000
    stop_colortemp: 1900
    mode: mired
  - platform: broadlink
    host: 192.168.1.21
    mac: 'B4:43:0D:FC:17:3A'
    switches:
      tv_on:
        friendly_name: 'TV Power'
        command_on: 'JgBYAAABKZIVERQ1FBEVERQRFBEUERQRFDYUERQ2FDYUNRQ2FDYUERQRFDYUNhQRFBEUERQ2FBEUNhQRFBEUNhQ2FDYUERQ1FAAFOAABKkgVAAxKAAEpSRQADQU='
        command_off: 'JgBYAAABKZIVERQ1FBEVERQRFBEUERQRFDYUERQ2FDYUNRQ2FDYUERQRFDYUNhQRFBEUERQ2FBEUNhQRFBEUNhQ2FDYUERQ1FAAFOAABKkgVAAxKAAEpSRQADQU='


# Weather Prediction
sensor:
  - platform: rest
    name: Desktop Month Revenue Eth
    resource: https://eth.nanopool.org/api/v1/approximated_earnings/93.2
    value_template: '{{ float(value_json.data.month.dollars) | round(2) }}'
    scan_interval: 300
    unit_of_measurement: '$'
  - platform: rest
    name: Desktop Month Revenue Sia
    resource: https://sia.nanopool.org/api/v1/approximated_earnings/1110
    value_template: '{{ float(value_json.data.month.dollars) | round(2) }}'
    scan_interval: 300
    unit_of_measurement: '$'
  - platform: template
    sensors:
      desktop_month_revenue:
        friendly_name: Desktop Month Revenue
        value_template: "{{ (float(states('sensor.desktop_month_revenue_eth')) + float(states('sensor.desktop_month_revenue_sia'))) | round(2) }}"
        unit_of_measurement: '$'
      desktop_month_cost:
        friendly_name: Desktop Month Cost
        value_template: "{{ float(1.01 * 30) | round(2) }}"
        unit_of_measurement: '$'
      desktop_month_profit:
        friendly_name: Desktop Month Profit
        value_template: "{{ (float(states('sensor.desktop_month_revenue')) - float(states('sensor.desktop_month_cost'))) | round(2) }}"
        unit_of_measurement: '$'
      desktop_watts:
        friendly_name: Desktop Watts
        value_template: "{{ states.switch.desktop_switch.attributes.current_consumption.split(' ')[0] }}"
        unit_of_measurement: 'Watts'
      desktop_24h_cost:
        friendly_name: 24h Cost
        value_template: "{{ ((((states.switch.desktop_switch.attributes.current_consumption.split(' ')[0] | float) - 60) / 1000) * 24 * 0.10) | round(2) }}"
        unit_of_measurement: '$'
  - platform: tcp
    name: GPU0 Eth Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[3].split(";")[0] if value_json.result[3].split(";")[0] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU1 Eth Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[3].split(";")[1] if value_json.result[3].split(";")[1] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU2 Eth Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[3].split(";")[2] if value_json.result[3].split(";")[2] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU3 Eth Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[3].split(";")[3] if value_json.result[3].split(";")[3] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: Eth Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[2].split(";")[0] if value_json.result[2].split(";")[0] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU0 Sia Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[5].split(";")[0] if value_json.result[5].split(";")[0] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU1 Sia Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[5].split(";")[1] if value_json.result[5].split(";")[1] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU2 Sia Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[5].split(";")[2] if value_json.result[5].split(";")[2] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU3 Sia Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[5].split(";")[3] if value_json.result[5].split(";")[3] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: Sia Rate
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'MH/s'
    value_template: '{{ (float(value_json.result[4].split(";")[0] if value_json.result[4].split(";")[0] != "off" else 0) / 1000) | round(2) }}'
  - platform: tcp
    name: GPU0 Temperature
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'C'
    value_template: '{{ float(value_json.result[6].split(";")[0]) }}'
  - platform: tcp
    name: GPU1 Temperature
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'C'
    value_template: '{{ float(value_json.result[6].split(";")[2]) }}'
  - platform: tcp
    name: GPU2 Temperature
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'C'
    value_template: '{{ float(value_json.result[6].split(";")[4]) }}'
  - platform: tcp
    name: GPU3 Temperature
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: 'C'
    value_template: '{{ float(value_json.result[6].split(";")[6]) }}'
  - platform: tcp
    name: GPU0 Fan
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: '%'
    value_template: '{{ float(value_json.result[6].split(";")[1]) }}'
  - platform: tcp
    name: GPU1 Fan
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: '%'
    value_template: '{{ float(value_json.result[6].split(";")[3]) }}'
  - platform: tcp
    name: GPU2 Fan
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: '%'
    value_template: '{{ float(value_json.result[6].split(";")[5]) }}'
  - platform: tcp
    name: GPU3 Fan
    host: localhost
    port: 3333
    payload: '{"id":0,"jsonrpc":"2.0","method":"miner_getstat1"}'
    unit_of_measurement: '%'
    value_template: '{{ float(value_json.result[6].split(";")[7]) }}'
  - platform: rest
    name: Eth Mining Balance
    resource: !secret eth_mining_balance_url
    value_template: '{{ value_json.data.balance | round(4) }}'
    unit_of_measurement: 'ETH'
    scan_interval: 300
  - platform: rest
    name: Sia Mining Balance
    resource: !secret sia_mining_balance_url
    value_template: '{{ value_json.data.balance | round(2) }}'
    unit_of_measurement: 'SIA'
    scan_interval: 300
  - platform: coinmarketcap
    currency: bitcoin
  - platform: coinmarketcap
    currency: ethereum
  # - platform: gtfs_realtime
  # - trip_update_url: 'https://data.texas.gov/download/rmk2-acnw/application/octet-stream'
  # - vehicle_position_url: 'https://data.texas.gov/download/eiei-9rpf/application/octet-stream'
  # - departures:
  # - - name: Home to work (22)
  # -   route: 22
  # -   stopid: 4162
  # - - name: Home to work (663)
  # -   route: 663
  # -   stopid: 4162
  # - - name: Work to home
  # -   route: 21
  # -   stopid: 5599
  # - - name: Work to airport
  # -   route: 100
  # -   stopid: 514
  - platform: darksky
    units: us
    api_key: !secret darksky_key
    forecast:
      - 1
      - 2
    monitored_conditions:
      - summary
      - nearest_storm_distance
      - temperature
      - humidity
      - temperature_min
      - temperature_max
      - precip_probability
      - minutely_summary
      - hourly_summary
      - precip_intensity_max
  - platform: ups
    username: !secret ups_username
    password: !secret ups_password
  - platform: fedex
    username: !secret fedex_username
    password: !secret fedex_password

# Text to speech
tts:
  platform: google

device_tracker:
  - platform: tomato
    host: 192.168.1.1
    username: admin
    password: !secret tomato_password
    http_id: !secret tomato_http_id
    consider_home: 180
  - platform: bluetooth_tracker
    interval_seconds: 10
    consider_home: 180

automation: !include automation.yaml
group: !include group.yaml

camera:
  # - platform: usps
  #   scan_interval: 5
  - name: radar
    platform: generic
    still_image_url: https://radblast.wunderground.com/cgi-bin/radar/WUNIDS_map?station=EWX&brand=wui&num=10&delay=25&type=N0R&frame=0&scale=1&noclutter=0&showstorms=0&mapx=400&mapy=240&centerx=400&centery=240&transx=0&transy=0&showlabels=1&severe=0&rainsnow=0&lightning=0&smooth=0&rand=24742355&lat=0&lon=0&label=you
    camera:
  - platform: ffmpeg
    name: home
    input: -rtsp_transport tcp -i rtsp://192.168.1.121:554/ch0.h264

emulated_hue:
  type: google_home
  listen_port: 80
  expose_by_default: false

notify:
  - name: html5
    platform: html5
    gcm_api_key: !secret html5_gcm_api_key
    gcm_sender_id: !secret html5_gcm_sender_id

alarm_control_panel:
  - name: ha_alarm
    platform: manual
    pending_time: 0
    trigger_time: 1

script: !include script.yaml

input_select:
  house_mode:
    name: House mode
    options:
      - awake
      - sleeping
  presence:
    name: Presence
    options:
      - home
      - away
  motion_lights:
    name: Motion Lights
    options:
      - 'on'
      - 'night'
      - 'off'

input_boolean:
  display_state:
    name: Display State
    initial: off

shell_command:
  enable_display: 'ssh tom@192.168.1.41 "export DISPLAY=:0; xset dpms force {{states.input_boolean.display_state.state}}"'
